generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String            @id @default(uuid())
  name            String
  email           String            @unique
  password        String
  role            Role              @default(customer)
  contactNo       String
  address         String
  profileImg      String
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  reviewAndRatins ReviewAndRating[]
  orders          Order[]

  @@map("users")
}

enum Role {
  admin
  customer
}

model Category {
  id    String @id @default(uuid())
  title String
  books Book[]

  @@map("categories")
}

model Book {
  id               String            @id @default(uuid())
  title            String
  author           String
  price            Float
  genre            String
  publicationDate  DateTime
  categoryId       String
  category         Category          @relation(fields: [categoryId], references: [id])
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  reviewAndRatings ReviewAndRating[]

  @@map("books")
}

model ReviewAndRating {
  id        String   @id @default(uuid())
  review    String
  rating    Int
  userId    String
  bookId    String
  user      User     @relation(fields: [userId], references: [id])
  book      Book     @relation(fields: [bookId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("reviews_and_ratings")
}

model Order {
  id           String      @id @default(uuid())
  userId       String
  orderedBooks Json
  status       OrderStatus @default(pending)
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  user         User        @relation(fields: [userId], references: [id])

  @@map("orders")
}

enum OrderStatus {
  pending
  shipped
  delivered
}
